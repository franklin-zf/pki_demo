# -*- coding: utf-8 -*-

"""
@author: Franklin
@file: contract.py
@time: 2019-10-06 21:22
@dec: 
"""
from web3 import Web3
import json



#
# def setAddress(addr):
#     address = web3.toChecksumAddress(addr)
#     web3.eth.defaultAccount = address

def addUser(addr, id, pubkey):
    address = web3.toChecksumAddress(addr)
    web3.eth.defaultAccount = address
    tx_hash = contract.functions.addUser(id, pubkey).transact()
    tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
    if tx_receipt:
        return True
    return False


def getID(addr):
    address = web3.toChecksumAddress(addr)
    web3.eth.defaultAccount = address
    tx_hash = contract.functions.getID().transact()
    tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
    if tx_receipt:
        return contract.functions.getID().call()
    return False


def getPubkey(addr):
    address = web3.toChecksumAddress(addr)
    web3.eth.defaultAccount = address
    tx_hash = contract.functions.getPubkey().transact()
    tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
    if tx_receipt:
        return contract.functions.getPubkey().call()
    return False


def deleteUser(addr):
    address = web3.toChecksumAddress(addr)
    web3.eth.defaultAccount = address
    tx_hash = contract.functions.deleteUser().transact()
    tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
    if tx_receipt:
        return contract.functions.deleteUser().call()
    return False


def updatePubkey(addr, pubkey):
    address = web3.toChecksumAddress(addr)
    web3.eth.defaultAccount = address
    tx_hash = contract.functions.updatePubkey(pubkey).transact()
    tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
    if tx_receipt:
        return contract.functions.updatePubkey(pubkey).call()
    return False


def updateID(addr, id):
    address = web3.toChecksumAddress(addr)
    web3.eth.defaultAccount = address
    tx_hash = contract.functions.updateID(id).transact()
    tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
    if tx_receipt:
        return contract.functions.updateID(id).call()
    return False


if __name__ == '__main__':
    ganche_url = "http://127.0.0.1:7545"

    web3 = Web3(Web3.HTTPProvider(ganche_url))

    abi = json.loads(
        '[{"constant":false,"inputs":[],"name":"deleteUser","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getPubkey","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_id","type":"string"},{"name":"_pubkey","type":"string"}],"name":"addUser","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"tacUsers","outputs":[{"name":"userID","type":"string"},{"name":"userPubkey","type":"string"},{"name":"isValid","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_id","type":"string"}],"name":"updateID","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_pubkey","type":"string"}],"name":"updatePubkey","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getID","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"}]')

    bytecode = '6060604052341561000f57600080fd5b6110e68061001e6000396000f300606060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063026ff05e14610088578063063cd44f146100b5578063079eaf3414610143578063289534b81461025c5780639320a3d914610385578063a3fd497a1461045b578063ab9dbd0714610531575b600080fd5b341561009357600080fd5b61009b6105bf565b604051808215151515815260200191505060405180910390f35b34156100c057600080fd5b6100c861074c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101085780820151818401526020810190506100ed565b50505050905090810190601f1680156101355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014e57600080fd5b6101e1600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610833565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610221578082015181840152602081019050610206565b50505050905090810190601f16801561024e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561026757600080fd5b610293600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b59565b60405180806020018060200184151515158152602001838103835286818151815260200191508051906020019080838360005b838110156102e15780820151818401526020810190506102c6565b50505050905090810190601f16801561030e5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561034757808201518184015260208101905061032c565b50505050905090810190601f1680156103745780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b341561039057600080fd5b6103e0600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610cc0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610420578082015181840152602081019050610405565b50505050905090810190601f16801561044d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561046657600080fd5b6104b6600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610ded565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f65780820151818401526020810190506104db565b50505050905090810190601f1680156105235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561053c57600080fd5b610544610f1a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610584578082015181840152602081019050610569565b50505050905090810190601f1680156105b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16156107445760206040519081016040528060008152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001908051906020019061067a929190611001565b5060206040519081016040528060008152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906106e0929190611001565b5060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff02191690831515021790555060019050610749565b600090505b90565b610754611081565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108295780601f106107fe57610100808354040283529160200191610829565b820191906000526020600020905b81548152906001019060200180831161080c57829003601f168201915b5050505050905090565b61083b611081565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610970576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109645780601f1061093957610100808354040283529160200191610964565b820191906000526020600020905b81548152906001019060200180831161094757829003601f168201915b50505050509050610b53565b826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190805190602001906109c5929190611001565b50816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190610a1b929190611001565b5060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b4b5780601f10610b2057610100808354040283529160200191610b4b565b820191906000526020600020905b815481529060010190602001808311610b2e57829003601f168201915b505050505090505b92915050565b6000602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c055780601f10610bda57610100808354040283529160200191610c05565b820191906000526020600020905b815481529060010190602001808311610be857829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ca35780601f10610c7857610100808354040283529160200191610ca3565b820191906000526020600020905b815481529060010190602001808311610c8657829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b610cc8611081565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610daf57816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190610d71929190611001565b506040805190810160405280600581526020017f4944206f6b0000000000000000000000000000000000000000000000000000008152509050610de8565b6040805190810160405280600581526020017f77726f6e6700000000000000000000000000000000000000000000000000000081525090505b919050565b610df5611081565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610edc57816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190610e9e929190611001565b506040805190810160405280600e81526020017f7075626c69636b206b6579206f6b0000000000000000000000000000000000008152509050610f15565b6040805190810160405280600581526020017f77726f6e6700000000000000000000000000000000000000000000000000000081525090505b919050565b610f22611081565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ff75780601f10610fcc57610100808354040283529160200191610ff7565b820191906000526020600020905b815481529060010190602001808311610fda57829003601f168201915b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061104257805160ff1916838001178555611070565b82800160010185558215611070579182015b8281111561106f578251825591602001919060010190611054565b5b50905061107d9190611095565b5090565b602060405190810160405280600081525090565b6110b791905b808211156110b357600081600090555060010161109b565b5090565b905600a165627a7a723058208e4815f6d61dfc16ca4805fbfd81e2290f96830f83b50f193bb68503ba2327250029'

    tac_contract = web3.eth.contract(abi=abi, bytecode=bytecode)

    # tx_hash = tac_contract.constructor().transact()
    #
    # tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)

    # print(tx_receipt.contractAddress)
    contractAddress = web3.toChecksumAddress('0x40483225ecCbD096011BaA943770D2b1a87B765A')
    contract = web3.eth.contract(
        address=contractAddress,
        abi=abi
    )

    addr = web3.eth.accounts[0]

    # print(addUser(addr, 'cn.bib.bistu.zf1', 'e446E989490747E6c9fD9FB81B1A7Af10CB1020C'))
    # print(getID(addr))
    # print(getPubkey(addr))
    # print(updateID(addr, 'cn.bib.bistu.zf345'))
    # print(updatePubkey(addr, 'pubkeypubkeypubkey'))
    # print(deleteUser(addr))